<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>managed_inputs</name>
          <description></description>
          <defaultValue>s3://avillach-73-bdcatalyst-etl/general/resources/Managed_Inputs.csv</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.3.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>https://github.com/hms-dbmi/ETLToolSuite-MissionControl</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# Managed Inputs


mkdir data
mkdir completed
mkdir hierarchies
mkdir processing

find data/ -type f -name &quot;phs*&quot; -exec rm -rf {} \;
find processing/ -type f -exec rm -rf {} \;
find complete -type f -exec rm -rf {} \;

aws s3 cp ${managed_inputs} data/

aws s3 cp s3://avillach-73-bdcatalyst-etl/general/data/metadata.json data/

csvcut -c 1,2,3,8,9 data/Managed_Inputs.csv &gt; inputs.csv


IFS=&apos;,&apos;
[ ! -f inputs.csv ]
while read abv_name stdy_id stdy_type data_ready data_processed
do
   echo &quot;abv_name stdy_id stdy_type data_ready data_processed&quot;
   echo ${abv_name} ${stdy_id} ${stdy_type} ${data_ready} ${data_processed}
   if [[ ${data_ready,,} == *&quot;yes&quot;* ]]; then
      if [[ ${abv_name,,} != *&quot;ORCHID&quot;* ]]; then
         if [[ ${data_processed,,} == *&quot;no&quot;* ]]; then
           echo &quot;&quot;
           echo &quot;#### Building &quot; ${abv_name} &quot; allConcepts.csv ####&quot;
           echo &quot;&quot;
        
           find data/ -name &quot;phs*&quot; -exec rm -rf {} \;
        
           find processing/ -type f -exec rm -rf {} \;
        
           rm -rf completed/*
        
           find mappings/ -name &quot;mapping.part*&quot; -exec rm -rf {} \;
        
           find resources/ -name &quot;config.part*&quot; -exec rm -rf {} \;
           
           rm -rf mappings/mapping.csv
        
           rm -rf resources/job.config
           
           mkdir data
           mkdir completed
           mkdir processing
           
           aws s3 cp s3://avillach-73-bdcatalyst-etl/${abv_name,,}/decoded_data/ data/ --recursive --quiet
        
           aws s3 cp s3://avillach-73-bdcatalyst-etl/${abv_name,,}/data/${abv_name^^}_PatientMapping.v2.csv data/ --quiet
        
           aws s3 cp s3://avillach-73-bdcatalyst-etl/${abv_name,,}/mappings/${stdy_id}/mapping.csv mappings/ --quiet
        
           aws s3 cp s3://avillach-73-bdcatalyst-etl/${abv_name,,}/resources/job.config resources/ --quiet
        
        
           echo &quot;&quot;
           echo &quot;#### Building partitioned files ####&quot;
           echo &quot;&quot;
           
           java -jar Partitioner.jar -propertiesfile resources/job.config -mappingskipheaders N -trialid ${abv_name^^}
        
           bash runpartition.sh -j 23 -m 3g -c &apos;config.part*.config&apos; -r resources/
        
           echo &quot;&quot;
           echo &quot;#### Merging partitioned files ####&quot;
           echo &quot;&quot;
           java -jar MergePartitions.jar -propertiesfile resources/job.config
           
           echo &quot;&quot;
           echo &quot;#### Uploading All_Concepts file ####&quot;
           echo &quot;&quot;
           
           ts=$(date +&quot;%Y-%m-%d_%H-%M-%S&quot;)

           #aws s3 mv s3://avillach-73-bdcatalyst-etl/${abv_name,,}/completed/${abv_name^^}_allConcepts.csv s3://avillach-73-bdcatalyst-etl/${abv_name,,}/completed/${abv_name^^}_allConcepts${ts}.csv
           
           aws s3 cp completed/${abv_name^^}_allConcepts.csv s3://avillach-73-bdcatalyst-etl/${abv_name,,}/completed/${stdy_id}/ --quiet
           
           
           #echo &quot;&quot;
           #echo &quot;#### Archiving All_Concepts file ####&quot;
           #echo &quot;&quot;
           
           #tar -zvcf ${studyid^^}_allConcepts_${ts}.tar.gz -C completed .
           
           #aws s3 cp ${studyid^^}_allConcepts_${ts}.tar.gz s3://avillach-73-bdcatalyst-etl/${studyid,,}/completed/ --quiet
           
           #rm -tf ${studyid^^}_allConcepts_${ts}.tar.gz
           
           echo &quot;&quot;
           echo &quot;#### Finished ${abv_name} ####&quot;
           echo &quot;&quot;
         else
            echo &quot;${abv_name} already processed&quot;
         fi
      fi
   else 
      echo &quot;$abv_name not ready for processing&quot;
   fi
done &lt; inputs.csv





</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>